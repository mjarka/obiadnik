{"version":3,"sources":["Appbar.js","StrapiAdress.js","Products.js","ProductDialog.js","Recipes.js","Theme.js","Calendar.js","BasketRecipes.js","constants.js","BasketCategories.js","Basket.js","App.js","reportWebVitals.js","index.js"],"names":["Appbar","AppBar","position","Toolbar","Typography","variant","Hidden","xsDown","Button","color","component","RouterLink","to","smUp","IconButton","aria-label","fontSize","strapiAdress","Products","classes","makeStyles","theme","divider","marginTop","spacing","marginBottom","chip","marginRight","useStyles","useState","categoryName","setCategoryName","categoryColor","setCategoryColor","categoryId","setCategoryId","categories","setCategories","unitName","setUnitName","units","setUnits","unitId","setUnitId","productName","setProductName","productId","setProductId","products","setProducts","handleDelete","useEffect","a","axios","get","StrapiAdress","then","res","data","console","log","catch","error","name","fetchMyAPI","Container","Grid","container","className","item","xs","sm","TextField","id","label","fullWidth","value","onChange","event","target","required","select","map","unit","MenuItem","onClick","category","button","endIcon","some","e","put","post","prevState","product","Chip","onDelete","deleteIcon","editProduct","ProductDialog","React","setValue","open","toggleOpen","title","year","dialogValue","setDialogValue","handleClose","Dialog","onClose","aria-labelledby","onSubmit","preventDefault","parseInt","DialogTitle","DialogContent","DialogContentText","autoFocus","margin","type","DialogActions","Recipes","recipeName","recipeDescription","recipe","setRecipe","recipes","setRecipes","tempProducts","setTempProducts","handleRecipe","multiline","rowsMax","Autocomplete","disablePortal","multiple","size","options","getOptionLabel","option","renderInput","params","productsIdArray","productsQuantity","Recipe","length","gutterBottom","helperText","tempProductsCopy","tempProductCopy","indexOf","handleProductValue","Divider","idArray","quantity","filteredProducts","filter","includes","handleDisplayRecipe","createMuiTheme","palette","background","default","primary","main","Calendar","section","isSelected","index","tempRecipes","tempRecipe","isTaken","response","handleRecipeChip","BasketRecipes","props","List","dense","disablePadding","subheader","ListSubheader","ListItem","role","undefined","ListItemIcon","Checkbox","edge","tabIndex","disableRipple","checked","handleCheckbox","ListItemText","secondary","itemUnit","productsQuery","BasketCategories","url","method","query","Constants","err","message","productsArray","flatMap","grouped","groupBy","items","Object","entries","key","push","Basket","isCategoryView","setIscategoryView","isFetched","setIsFetched","newValue","App","ThemeProvider","CssBaseline","basename","process","maxWidth","disableGutters","Paper","elevation","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+WAee,SAASA,IACtB,OACE,8BACE,cAACC,EAAA,EAAD,CAAQC,SAAS,SAAjB,SACE,eAACC,EAAA,EAAD,WAIE,cAACC,EAAA,EAAD,CAAYC,QAAQ,KAApB,qBACA,eAACC,EAAA,EAAD,CAAQC,QAAM,EAAd,UACE,cAACC,EAAA,EAAD,CAAQC,MAAM,UAAUC,UAAWC,IAAYC,GAAG,YAAlD,sBAIA,cAACJ,EAAA,EAAD,CAAQC,MAAM,UAAUC,UAAWC,IAAYC,GAAG,WAAlD,sBAGA,cAACJ,EAAA,EAAD,CAAQC,MAAM,UAAUC,UAAWC,IAAYC,GAAG,YAAlD,uBAGA,cAACJ,EAAA,EAAD,CAAQC,MAAM,UAAUC,UAAWC,IAAYC,GAAG,UAAlD,uBAIF,eAACN,EAAA,EAAD,CAAQO,MAAI,EAAZ,UACE,cAACC,EAAA,EAAD,CACEC,aAAW,SACXL,UAAWC,IACXF,MAAM,UACNG,GAAG,YAJL,SAME,cAAC,IAAD,CAAcI,SAAS,YAGzB,cAACF,EAAA,EAAD,CACEC,aAAW,SACXL,UAAWC,IACXF,MAAM,UACNG,GAAG,WAJL,SAME,cAAC,IAAD,CAAcI,SAAS,YAEzB,cAACF,EAAA,EAAD,CACEC,aAAW,SACXL,UAAWC,IACXF,MAAM,UACNG,GAAG,YAJL,SAME,cAAC,IAAD,CAAeI,SAAS,YAE1B,cAACF,EAAA,EAAD,CACEC,aAAW,SACXL,UAAWC,IACXF,MAAM,UACNG,GAAG,UAJL,SAME,cAAC,IAAD,CAAoBI,SAAS,sB,8ICtE5BC,EADM,iCCUN,SAASC,IAItB,IAUMC,EAVYC,aAAW,SAACC,GAAD,MAAY,CACvCC,QAAS,CACPC,UAAWF,EAAMG,QAAQ,GACzBC,aAAcJ,EAAMG,QAAQ,IAE9BE,KAAM,CACJC,YAAaN,EAAMG,QAAQ,GAC3BC,aAAcJ,EAAMG,QAAQ,OAGhBI,GAdiB,EAkBOC,mBAAS,IAlBhB,mBAkB1BC,EAlB0B,KAkBZC,EAlBY,OAmBSF,mBAAS,IAnBlB,mBAmB1BG,EAnB0B,KAmBXC,EAnBW,OAoBGJ,mBAAS,KApBZ,mBAoB1BK,EApB0B,KAoBdC,EApBc,OAqBGN,mBAAS,IArBZ,mBAqB1BO,EArB0B,KAqBdC,EArBc,OAsBDR,mBAAS,IAtBR,mBAsB1BS,EAtB0B,KAsBhBC,EAtBgB,OAuBPV,mBAAS,IAvBF,mBAuB1BW,EAvB0B,KAuBnBC,EAvBmB,OAwBLZ,mBAAS,KAxBJ,mBAwB1Ba,EAxB0B,KAwBlBC,EAxBkB,OAyBKd,mBAAS,IAzBd,mBAyB1Be,EAzB0B,KAyBbC,EAzBa,OA0BChB,mBAAS,IA1BV,mBA0B1BiB,EA1B0B,KA0BfC,EA1Be,QA2BDlB,mBAAS,IA3BR,qBA2B1BmB,GA3B0B,MA2BhBC,GA3BgB,MA4B3BC,GAAe,aAKrBC,qBAAU,WAAM,4CACd,sBAAAC,EAAA,sDACEC,IACGC,IAAIC,EAAe,gCACnBC,MAAK,SAAUC,GACdR,GAAYQ,EAAIC,MAChBC,QAAQC,IAAIH,EAAIC,SAGjBG,OAAM,SAAUC,GACfH,QAAQC,IAAIE,MAEhBT,IACGC,IAAIC,EAAe,UACnBC,MAAK,SAAUC,GACdhB,EAASgB,EAAIC,MACbnB,EAAYkB,EAAIC,KAAK,GAAGK,SAEzBF,OAAM,SAAUC,GACfH,QAAQC,IAAIE,MAEhBT,IACGC,IAAIC,EAAe,eACnBC,MAAK,SAAUC,GACdpB,EAAcoB,EAAIC,MAClB3B,EAAgB0B,EAAIC,KAAK,GAAGK,MAC5B9B,EAAiBwB,EAAIC,KAAK,GAAGjD,UAE9BoD,OAAM,SAAUC,GACfH,QAAQC,IAAIE,MA5BlB,4CADc,uBAAC,WAAD,wBAgCdE,KACC,IA+DH,OACE,eAACC,EAAA,EAAD,WACE,eAACC,EAAA,EAAD,CAAMC,WAAS,EAAC3C,QAAS,EAAG4C,UAAWjD,EAAQG,QAA/C,UACE,cAAC4C,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAvB,SACE,cAACC,EAAA,EAAD,CACEC,GAAG,iBACHC,MAAM,4BACNC,WAAS,EACTC,MAAOhC,EACPiC,SAxDkB,SAACC,GAC3BjC,EAAeiC,EAAMC,OAAOH,QAwDpBI,UAAQ,MAIZ,cAACd,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAvB,SACE,cAACC,EAAA,EAAD,CACEC,GAAG,OACHQ,QAAM,EACNP,MAAM,yBACNE,MAAOtC,EACPqC,WAAS,EACTE,SAvEe,SAACC,GACxBvC,EAAYuC,EAAMC,OAAOH,QAgEnB,SAQGpC,EAAM0C,KAAI,SAACC,GAAD,OACT,cAACC,EAAA,EAAD,CAEER,MAAOO,EAAKpB,KACZsB,QAAS,kBAhFKP,EAgFoBK,EAAKV,QA/EnD9B,EAAUmC,GADe,IAACA,GA6EhB,SAKGK,EAAKpB,MAJDoB,EAAKV,WAUlB,cAACP,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAvB,SACE,cAACC,EAAA,EAAD,CACEC,GAAG,WACHQ,QAAM,EACNP,MAAM,yBACNE,MAAO9C,EACP6C,WAAS,EACTE,SAtFmB,SAACC,GAC5B/C,EAAgB+C,EAAMC,OAAOH,QA+EvB,SAQGxC,EAAW8C,KAAI,SAACI,GAAD,OACd,cAACF,EAAA,EAAD,CAEER,MAAOU,EAASvB,KAChBsB,QAAS,kBAzGSZ,EA0GOa,EAASb,GA1GZhE,EA0GgB6E,EAAS7E,MAzG3D0B,EAAcsC,QACdxC,EAAiBxB,GAFY,IAACgE,EAAIhE,GAsGxB,SAOG6E,EAASvB,MANLuB,EAASb,WAWtB,cAACP,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAtB,SACE,cAAC/D,EAAA,EAAD,CACEH,QAAQ,YACRI,MAAM,UACN2D,UAAWjD,EAAQoE,OACnBC,QAAS,cAAC,IAAD,IACTH,QA7FW,WACnB,IAAMtB,EAAOnB,EACPuC,EAAOzC,EACP4C,EAAWpD,EAGbc,GAASyC,MAAK,SAACC,GAAD,OAAOA,EAAE3B,OAASA,MAClCJ,QAAQC,IAAI,+BACZP,IACGsC,IAAIpC,EAAe,aAAeT,EAAW,CAAEiB,OAAMuB,WAAUH,SAC/D3B,MAAK,SAACC,GACLE,QAAQC,IAAIH,GACZE,QAAQC,IAAIH,EAAIC,WAKpBL,IACGuC,KAAKrC,EAAe,YAAa,CAAEQ,OAAMuB,WAAUH,SACnD3B,MAAK,SAACC,GACLE,QAAQC,IAAIH,GACZE,QAAQC,IAAIH,EAAIC,SAGpBT,IAAY,SAAC4C,GAAD,4BACPA,GADO,CAEV,CAAE9B,OAAMuB,SAAU,CAAE7E,MAAOuB,WA8DzB,yBAaHgB,GAASkC,KAAI,SAACY,GAAD,OACZ,cAACC,EAAA,EAAD,CACE3B,UAAWjD,EAAQO,KACnBjB,MAAO,UAEPiE,MAAOoB,EAAQ/B,KACfiC,SAAU9C,GACV+C,WAAY,cAAC,IAAD,IACZZ,QAAS,SAACK,GAAD,OAtHG,SAACI,EAAShB,GAC5BjC,EAAeiD,EAAQ/B,MACvBhB,EAAa+C,EAAQrB,IACrB1C,EAAgB+D,EAAQR,SAASvB,MACjCxB,EAAYuD,EAAQX,KAAKpB,MAkHHmC,CAAYJ,KAJvBA,EAAQrB,U,2FC9MR,SAAS0B,IAAgB,MAIZC,IAAMvE,SAAS,MAJH,mBAIxBwE,GAJwB,aAKXD,IAAMvE,UAAS,GALJ,mBAK/ByE,EAL+B,KAKzBC,EALyB,OAMAH,IAAMvE,SAAS,CACnD2E,MAAO,GACPC,KAAM,KAR8B,mBAM/BC,EAN+B,KAMlBC,EANkB,KAahCC,EAAc,WAClBD,EAAe,CACbH,MAAO,GACPC,KAAM,KAGRF,GAAW,IAWb,OACE,cAACM,EAAA,EAAD,CACEP,KAAMA,EACNQ,QAASF,EACTG,kBAAgB,oBAHlB,SAKE,uBAAMC,SAfW,SAAClC,GACpBA,EAAMmC,iBACNZ,EAAS,CACPG,MAAOE,EAAYF,MACnBC,KAAMS,SAASR,EAAYD,KAAM,MAGnCG,KAQE,UACE,cAACO,EAAA,EAAD,CAAa1C,GAAG,oBAAhB,gCACA,eAAC2C,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,+DAGA,cAAC7C,EAAA,EAAD,CACE8C,WAAS,EACTC,OAAO,QACP9C,GAAG,OACHG,MAAO8B,EAAYF,MACnB3B,SAAU,SAACC,GAAD,OACR6B,EAAe,2BAAKD,GAAN,IAAmBF,MAAO1B,EAAMC,OAAOH,UAEvDF,MAAM,QACN8C,KAAK,SAEP,cAAChD,EAAA,EAAD,CACE+C,OAAO,QACP9C,GAAG,OACHG,MAAO8B,EAAYD,KACnB5B,SAAU,SAACC,GAAD,OACR6B,EAAe,2BAAKD,GAAN,IAAmBD,KAAM3B,EAAMC,OAAOH,UAEtDF,MAAM,YACN8C,KAAK,YAGT,eAACC,EAAA,EAAD,WACE,cAACjH,EAAA,EAAD,CAAQ6E,QAASuB,EAAanG,MAAM,UAApC,oBAGA,cAACD,EAAA,EAAD,CAAQgH,KAAK,SAAS/G,MAAM,UAA5B,yBC5DK,SAASiH,KAItB,IAUMvG,EAVYC,aAAW,SAACC,GAAD,MAAY,CACvCC,QAAS,CACPC,UAAWF,EAAMG,QAAQ,GACzBC,aAAcJ,EAAMG,QAAQ,IAE9BE,KAAM,CACJC,YAAaN,EAAMG,QAAQ,GAC3BC,aAAcJ,EAAMG,QAAQ,OAGhBI,GAdgB,EAmBJC,mBAAS,CACnC8F,WAAY,GACZC,kBAAmB,KArBW,mBAmBzBC,EAnByB,KAmBjBC,EAnBiB,OAuBFjG,mBAAS,IAvBP,mBAuBzBkG,EAvByB,KAuBhBC,EAvBgB,OAwBAnG,mBAAS,IAxBT,mBAwBzBmB,EAxByB,KAwBfC,EAxBe,OAyBQpB,mBAAS,IAzBjB,mBAyBzBoG,EAzByB,KAyBXC,EAzBW,KA0B1BhF,EAAe,aAOfiF,EAAe,SAACrD,GACpB,IAAMF,EAAQE,EAAMC,OAAOH,MAC3BkD,EAAU,2BACLD,GADI,kBAEN/C,EAAMC,OAAON,GAAKG,MAOvBzB,qBAAU,WAAM,4CACd,sBAAAC,EAAA,sDACEC,IACGC,IAAIC,EAAe,YACnBC,MAAK,SAAUC,GACduE,EAAWvE,EAAIC,SAEhBG,OAAM,SAAUC,GACfH,QAAQC,IAAIE,MAEhBT,IACGC,IAAIC,EAAe,aACnBC,MAAK,SAAUC,GACdR,EAAYQ,EAAIC,SAEjBG,OAAM,SAAUC,GACfH,QAAQC,IAAIE,MAflB,4CADc,uBAAC,WAAD,wBAmBdE,KACC,IA6EH,OADAL,QAAQC,IAAIqE,GAEV,eAAChE,EAAA,EAAD,WACE,cAACkC,EAAD,IACA,eAACjC,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAWjD,EAAQG,QAASE,QAAS,EAArD,UACE,eAAC0C,EAAA,EAAD,CAAMG,MAAI,EAACE,GAAI,EAAGD,GAAI,GAAtB,UACE,cAACJ,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAf,SACE,cAACE,EAAA,EAAD,CACEC,GAAG,aACHC,MAAM,iBACNE,MAAOiD,EAAOF,WACd9C,SAAUsD,EACVxD,WAAS,EACTK,UAAQ,MAGZ,cAACd,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIF,UAAWjD,EAAQG,QAAtC,SACE,cAACkD,EAAA,EAAD,CACEC,GAAG,oBACHC,MAAM,UACN0D,WAAS,EACTC,QAAS,GACTzD,MAAOiD,EAAOD,kBACd/C,SAAUsD,EACVxD,WAAS,MAGb,cAACT,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIF,UAAWjD,EAAQG,QAAtC,SACE,cAACgH,EAAA,EAAD,CACEC,eAAe,EACf5D,WAAS,EACT6D,UAAQ,EACRC,KAAK,QACLhE,GAAG,iBACHiE,QAAS1F,EACT4B,MAAOqD,EACPpD,SAAU,SAACC,EAAOF,GAAR,OAAkBsD,EAAgBtD,IAC5C+D,eAAgB,SAACC,GAAD,OAAYA,EAAO7E,MACnC8E,YAAa,SAACC,GAAD,OACX,cAACtE,EAAA,EAAD,2BAAesE,GAAf,IAAuBzI,QAAQ,WAAWqE,MAAM,mBAKtD,cAACR,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAtB,SACE,cAAC/D,EAAA,EAAD,CACEH,QAAQ,YACRI,MAAM,UACN2D,UAAWjD,EAAQoE,OACnBC,QAAS,cAAC,IAAD,IACTH,QA7ES,WAInB,IAAM0D,EAAkBd,EAAa/C,KAAI,SAACb,GACxC,IAAM2E,EAAmB,GAGzB,OAFAA,EAAiBlD,QAAUzB,EAAKI,GAChCuE,EAAiBpE,MAAQP,EAAKO,MACvBoE,KAGHjF,EAAO8D,EAAOF,WACdsB,EAASpB,EAAOD,kBAChBoB,EAAmBD,EAEzB1F,IACGuC,KAAKrC,EAAe,WAAY,CAC/BQ,OACAkF,SACAD,qBAEDxF,MAAK,SAACC,GACLE,QAAQC,IAAIH,GACZE,QAAQC,IAAIH,EAAIC,UAiDZ,yBAWJ,eAACQ,EAAA,EAAD,CAAMG,MAAI,EAACE,GAAI,EAAGD,GAAI,GAAtB,UACG2D,EAAaiB,OAAS,GACrB,cAAC9I,EAAA,EAAD,CAAYC,QAAQ,UAAU8I,cAAY,EAA1C,gDAIF,cAACjF,EAAA,EAAD,CAAMC,WAAS,EAAf,SACG8D,EAAa/C,KAAI,SAACY,GAAD,OAChB,cAAC5B,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAf,SACE,cAACE,EAAA,EAAD,CAEEE,MAAOoB,EAAQ/B,KACfU,GAAG,sBACHgE,KAAK,QACLW,WAAYtD,EAAQX,KAAKpB,KACzBa,MAAOkB,EAAQlB,MACfC,SAAU,SAACa,GAAD,OA/IC,SAACI,EAASJ,GACnC/B,QAAQC,IAAI8B,EAAEX,OAAOH,MAAOkB,GAG5B,IAAIuD,EAAgB,YAAOpB,GAEvBqB,EAAe,eACdD,EAAiBpB,EAAasB,QAAQzD,KAG3CwD,EAAgB1E,MAAQc,EAAEX,OAAOH,MAGjCyE,EAAiBpB,EAAasB,QAAQzD,IAAYwD,EAGlDpB,EAAgBmB,GA+HeG,CAAmB1D,EAASJ,KANxCI,EAAQrB,iBAazB,cAACgF,EAAA,EAAD,IACA,cAACvF,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAWjD,EAAQG,QAASE,QAAS,EAArD,SACE,cAAC0C,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIC,GAAI,GAAvB,SACGwD,EAAQ7C,KAAI,SAAC2C,GAAD,OACX,cAAC9B,EAAA,EAAD,CACE3B,UAAWjD,EAAQO,KAEnBgD,MAAOmD,EAAO9D,KACdtD,MAAM,UACNuF,SAAU9C,EACVmC,QAAS,kBA1IO,SAACwC,GAC3BC,EAAU,2BACLD,GADI,IAEPF,WAAYE,EAAO9D,KACnB6D,kBAAmBC,EAAOoB,UAG5B,IAAMS,EAAU7B,EAAOmB,iBAAiB9D,KAAI,SAACyE,GAC3C,OAAOA,EAAS7D,QAAQrB,MAIpBmF,EAAmB5G,EAAS6G,QAAO,SAAC/D,GAAD,OACvC4D,EAAQI,SAAShE,EAAQrB,OAG3ByD,EAAgB0B,GAChBjG,QAAQC,IAAIiE,GAyHakC,CAAoBlC,KAJ9BA,EAAOpD,c,4CCpOXpD,GAXD2I,aAAe,CAC3BC,QAAS,CACPC,WAAY,CACVC,QAAS,WAEXC,QAAS,CACPC,KAAM,cCFG,SAASC,KAItB,IAaMnJ,EAbYC,aAAW,SAACC,GAAD,MAAY,CACvCC,QAAS,CACPC,UAAWF,EAAMG,QAAQ,GACzBC,aAAcJ,EAAMG,QAAQ,IAE9BE,KAAM,CACJC,YAAaN,EAAMG,QAAQ,GAC3BC,aAAcJ,EAAMG,QAAQ,IAE9B+I,QAAS,CACPhD,OAAQlG,EAAMG,QAAQ,EAAG,EAAG,OAGhBI,GAjBiB,EAsBHC,mBAAS,IAtBN,mBAsB1BkG,EAtB0B,KAsBjBC,EAtBiB,KA2BjC7E,qBAAU,WAAM,4CACd,sBAAAC,EAAA,sDACEC,IACGC,IAAIC,EAAe,YACnBC,MAAK,SAAUC,GACduE,EAAWvE,EAAIC,MACfC,QAAQC,IAAIH,EAAIC,SAGjBG,OAAM,SAAUC,GACfH,QAAQC,IAAIE,MATlB,4CADc,uBAAC,WAAD,wBAadE,KACC,IAmCH,OACE,eAACC,EAAA,EAAD,WACE,cAAC7D,EAAA,EAAD,CAAYC,QAAQ,KAAK8I,cAAY,EAAC/E,UAAWjD,EAAQoJ,QAAzD,0CAIA,cAACrG,EAAA,EAAD,CAAMC,WAAS,EAAC3C,QAAS,EAAG4C,UAAWjD,EAAQG,QAA/C,SACE,cAAC4C,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIC,GAAI,GAAvB,SAEGwD,EAAQ7C,KAAI,SAAC2C,GAAD,OACX,cAAC9B,EAAA,EAAD,CACE3B,UAAWjD,EAAQO,KAEnBgD,MAAOmD,EAAO9D,KACdtD,MAAOoH,EAAO2C,WAAa,UAAY,GACvCnF,QAAS,kBA7CI,SAACwC,GACxB,IAAM4C,EAAQ1C,EAAQwB,QAAQ1B,GAC9BlE,QAAQC,IAAI6G,GAEZ,IAAIC,EAAW,YAAO3C,GAElB4C,EAAU,eAAQD,EAAYD,KAGJ,IAA1BE,EAAWH,YACbG,EAAW3B,iBAAiB9D,KAAI,SAACY,GAAD,OAAcA,EAAQ8E,SAAU,KAGlED,EAAWH,YAAcG,EAAWH,WAEpCE,EAAYD,GAASE,EAGrB3C,EAAW0C,GACX/G,QAAQC,IAAImE,GAIZ1E,IACGsC,IAAIpC,EAAe,YAAcsE,EAAOpD,GAAIkG,GAC5CnH,MAAK,SAACqH,GACLlH,QAAQC,IAAIiH,MAmBSC,CAAiBjD,KAH3BA,EAAOpD,c,gEChFX,SAASsG,GAAcC,GAqBpC,OACE,cAAC9G,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIC,GAAI,GAAvB,SACGyG,EAAMjD,QAAQ7C,KAAI,SAAC2C,GAAD,OACjB,qCACE,cAACoD,GAAA,EAAD,CACEC,OAAK,EACLC,gBAAgB,EAChBC,UAAW,cAACC,GAAA,EAAD,UAAgBxD,EAAO9D,SAGnC8D,EAAOmB,iBAAiB9D,KAAI,SAACb,GAAD,OAC3B,eAACiH,GAAA,EAAD,CAAwBC,UAAMC,EAAWjG,QAAM,EAA/C,UACE,cAACkG,GAAA,EAAD,UACE,cAACC,GAAA,EAAD,CACEC,KAAK,QACLC,UAAW,EACXC,eAAa,EACbC,QAASzH,EAAKuG,QACdvF,QAAS,kBAtCF,SAACoF,EAAOhG,EAAIoD,GAEjC,IAAI6C,EAAW,YAAOM,EAAMjD,SAExB4C,EAAU,eAAQD,EAAYD,IAElCE,EAAW3B,iBAAiBvE,GAAImG,SAAWD,EAAW3B,iBAAiBvE,GACpEmG,QAEHF,EAAYD,GAASE,EAGrBK,EAAMnG,SAAS6F,GAEfrH,IAAMsC,IAAIpC,EAAe,YAAcsE,EAAOpD,GAAIoD,GAAQrE,MAAK,SAACC,GAC9DE,QAAQC,IAAIH,GACZE,QAAQC,IAAIH,EAAIC,SAuBFqI,CACEf,EAAMjD,QAAQwB,QAAQ1B,GACtBA,EAAOmB,iBAAiBO,QAAQlF,GAChCwD,QAKR,cAACmE,GAAA,EAAD,CACEvH,GAAIJ,EAAKI,GACT2F,QAAS/F,EAAKyB,QAAQ/B,KACtBkI,UAAW5H,EAAKO,MAAQ,IAAMoG,EAAMkB,SAAS7H,EAAKyB,QAAQX,UAnB/Cd,EAAKI,eC9CzB,IACM0H,GAAa,8O,UCeX,SAASC,GAAiBpB,GAAO,MAIdnJ,mBAAS,IAJK,mBAIvCmB,EAJuC,KAI7BC,EAJ6B,KAS9CE,qBAAU,WAAM,4CACd,sBAAAC,EAAA,sDACEC,IAAM,CACJgJ,IAAK9I,EAAe,WACpB+I,OAAQ,OACR5I,KAAM,CACJ6I,MAAOC,MAGRhJ,MAAK,SAACC,GACLE,QAAQC,IAAIH,EAAIC,KAAKA,MACrBT,EAAYQ,EAAIC,KAAKA,KAAKqE,YAE3BlE,OAAM,SAAC4I,GACN9I,QAAQC,IAAI6I,EAAIC,YAbtB,4CADc,uBAAC,WAAD,wBAiBd1I,KACC,IAmBH,IAfA,IAAM2I,EAAgB3J,EAAS4J,SAAQ,SAAC/E,GAAD,OACrCA,EAAOmB,iBAAiB9D,KAAI,SAACb,GAAD,OAAUA,QAKlCwI,EAAUC,mBACdH,GACA,SAAC7G,GAAD,OAAaA,EAAQA,QAAQR,SAASvB,QAMlCgJ,EAAQ,GACd,MAA2BC,OAAOC,QAAQJ,GAA1C,eAAoD,CAAC,IAAD,sBAAxCK,EAAwC,KAAnCtI,EAAmC,KAClDmI,EAAMI,KACJ,qCACE,cAAClC,GAAA,EAAD,CACEC,OAAK,EACLC,gBAAgB,EAChBC,UAAW,cAACC,GAAA,EAAD,UAAgB6B,MAE5BtI,EAAMM,KAAI,SAACY,GAAD,OACT,eAACwF,GAAA,EAAD,CAA2BC,UAAMC,EAAWjG,QAAM,EAAlD,UACE,cAACkG,GAAA,EAAD,UACE,cAACC,GAAA,EAAD,CACEC,KAAK,QACLC,UAAW,EACXC,eAAa,EACbC,QAAShG,EAAQ8E,YAUrB,cAACoB,GAAA,EAAD,CACEvH,GAAIqB,EAAQrB,GACZ2F,QAAStE,EAAQA,QAAQ/B,KACzBkI,UAAWnG,EAAQlB,MAAQ,IAAMkB,EAAQA,QAAQX,KAAKpB,SAnB3C+B,EAAQrB,WA2B/B,OADAd,QAAQC,IAAIoJ,OAAOC,QAAQJ,IAEzB,cAAC3I,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIC,GAAI,GAAvB,SACGwI,ICtFP,IAAMnL,GAAYR,aAAW,SAACC,GAAD,MAAY,CACvCkJ,QAAS,CACPhD,OAAQlG,EAAMG,QAAQ,EAAG,EAAG,QAIjB,SAAS4L,KACtB,IAAMjM,EAAUS,KADe,EAKDC,mBAAS,IALR,mBAKxBkG,EALwB,KAKfC,EALe,OAMLnG,mBAAS,IANJ,mBAMxBW,EANwB,KAMjBC,EANiB,OAOaZ,oBAAS,GAPtB,mBAOxBwL,EAPwB,KAORC,EAPQ,OAQGzL,oBAAS,GARZ,mBAQxB0L,EARwB,KAQbC,EARa,KAmD/B,OAvBArK,qBAAU,WAAM,4CACd,sBAAAC,EAAA,sDACEC,IACGC,IAAIC,EAAe,4BACnBC,MAAK,SAAUC,GACduE,EAAWvE,EAAIC,MACf8J,GAAa,MAEd3J,OAAM,SAAUC,GACfH,QAAQC,IAAIE,MAEhBT,IACGC,IAAIC,EAAe,UACnBC,MAAK,SAAUC,GACdhB,EAASgB,EAAIC,SAEdG,OAAM,SAAUC,GACfH,QAAQC,IAAIE,MAhBlB,4CADc,uBAAC,WAAD,wBAoBdE,KACC,IAGD,eAACC,EAAA,EAAD,WAEE,cAAC7D,EAAA,EAAD,CAAYC,QAAQ,KAAK8I,cAAY,EAAC/E,UAAWjD,EAAQoJ,QAAzD,SACGgD,EACIxF,EAAQmB,OAEP,uBADA,oEAEF,6BAEN,cAAC1I,EAAA,EAAD,CACEC,MAAM,YACNJ,QAAQ,YACRgF,QAAS,kBAAMiI,GAAmBD,IAHpC,SAKGA,EAAiB,kCAA0B,uCAE9C,cAACnJ,EAAA,EAAD,CAAMC,WAAS,EAAC3C,QAAS,EAAzB,SACG6L,EACC,cAACtC,GAAD,CACEhD,QAASA,EACTmE,SA5DO,SAACA,GAChB,OAAO1J,EACJqH,QAAO,SAACrH,GAAD,OAAWA,EAAMiC,KAAOyH,KAC/BhH,KAAI,SAACC,GAAD,OAAUA,EAAKpB,SA0Ddc,SApDV,SAA4B4I,GAC1BzF,EAAWyF,MAsDL,cAACrB,GAAD,CAAkBrE,QAASA,SClFtB,SAAS2F,KACtB,OACE,mCACE,eAACC,GAAA,EAAD,CAAetM,MAAOA,GAAtB,UACE,cAACuM,GAAA,EAAD,IACA,cAAC,IAAD,CAAQC,SAAUC,YAAlB,SACE,cAAC7J,EAAA,EAAD,CAAW8J,SAAS,KAAKC,eAAe,OAAxC,SACE,eAACC,GAAA,EAAD,CAAOC,UAAW,EAAlB,UACE,cAAClO,EAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOmO,OAAK,EAACC,KAAM,CAAC,YAAa,KAAjC,SACE,cAAClN,EAAD,MAGF,cAAC,IAAD,CAAOkN,KAAK,WAAZ,SACE,cAAC1G,GAAD,MAEF,cAAC,IAAD,CAAO0G,KAAK,YAAZ,SACE,cAAC9D,GAAD,MAEF,cAAC,IAAD,CAAO8D,KAAK,UAAZ,SACE,cAAChB,GAAD,qBCnClB,IAYeiB,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqB/K,MAAK,YAAkD,IAA/CgL,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,SAM1BZ,O","file":"static/js/main.0b3b4e20.chunk.js","sourcesContent":["import React from \"react\";\r\nimport Hidden from \"@material-ui/core/Hidden\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\n\r\n// appbar icons\r\nimport MenuBookIcon from \"@material-ui/icons/MenuBook\";\r\nimport FastfoodIcon from \"@material-ui/icons/Fastfood\";\r\nimport ShoppingBasketIcon from \"@material-ui/icons/ShoppingBasket\";\r\nimport DateRangeIcon from \"@material-ui/icons/DateRange\";\r\n\r\nexport default function Appbar() {\r\n  return (\r\n    <div>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          {/* <IconButton edge=\"start\" color=\"inherit\" aria-label=\"menu\">\r\n            <MenuIcon />\r\n          </IconButton> */}\r\n          <Typography variant=\"h6\">Obiados</Typography>\r\n          <Hidden xsDown>\r\n            <Button color=\"inherit\" component={RouterLink} to=\"/products\">\r\n              Produkty\r\n            </Button>\r\n\r\n            <Button color=\"inherit\" component={RouterLink} to=\"/recipes\">\r\n              Przepisy\r\n            </Button>\r\n            <Button color=\"inherit\" component={RouterLink} to=\"/calendar\">\r\n              Kalendarz\r\n            </Button>\r\n            <Button color=\"inherit\" component={RouterLink} to=\"/basket\">\r\n              Koszyk\r\n            </Button>\r\n          </Hidden>\r\n          <Hidden smUp>\r\n            <IconButton\r\n              aria-label=\"delete\"\r\n              component={RouterLink}\r\n              color=\"inherit\"\r\n              to=\"/products\"\r\n            >\r\n              <FastfoodIcon fontSize=\"small\" />\r\n            </IconButton>\r\n\r\n            <IconButton\r\n              aria-label=\"delete\"\r\n              component={RouterLink}\r\n              color=\"inherit\"\r\n              to=\"/recipes\"\r\n            >\r\n              <MenuBookIcon fontSize=\"small\" />\r\n            </IconButton>\r\n            <IconButton\r\n              aria-label=\"delete\"\r\n              component={RouterLink}\r\n              color=\"inherit\"\r\n              to=\"/calendar\"\r\n            >\r\n              <DateRangeIcon fontSize=\"small\" />\r\n            </IconButton>\r\n            <IconButton\r\n              aria-label=\"delete\"\r\n              component={RouterLink}\r\n              color=\"inherit\"\r\n              to=\"/basket\"\r\n            >\r\n              <ShoppingBasketIcon fontSize=\"small\" />\r\n            </IconButton>\r\n          </Hidden>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\n","const strapiAdress = \"https://obiadnik.herokuapp.com\";\r\nexport default strapiAdress;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Chip, Container, TextField } from \"@material-ui/core\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport axios from \"axios\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport StrapiAdress from \"./StrapiAdress\";\r\nexport default function Products() {\r\n  //\r\n  //    STYLES\r\n  //\r\n  const useStyles = makeStyles((theme) => ({\r\n    divider: {\r\n      marginTop: theme.spacing(3),\r\n      marginBottom: theme.spacing(3),\r\n    },\r\n    chip: {\r\n      marginRight: theme.spacing(1),\r\n      marginBottom: theme.spacing(1),\r\n    },\r\n  }));\r\n  const classes = useStyles();\r\n  //\r\n  //    States\r\n  //\r\n  const [categoryName, setCategoryName] = useState(\"\");\r\n  const [categoryColor, setCategoryColor] = useState(\"\");\r\n  const [categoryId, setCategoryId] = useState(\"1\");\r\n  const [categories, setCategories] = useState([]);\r\n  const [unitName, setUnitName] = useState(\"\");\r\n  const [units, setUnits] = useState([]);\r\n  const [unitId, setUnitId] = useState(\"1\");\r\n  const [productName, setProductName] = useState([]);\r\n  const [productId, setProductId] = useState([]);\r\n  const [products, setProducts] = useState([]);\r\n  const handleDelete = () => {};\r\n\r\n  //\r\n  //    FETCH\r\n  //\r\n  useEffect(() => {\r\n    async function fetchMyAPI() {\r\n      axios\r\n        .get(StrapiAdress + \"/products?_sort=category:ASC\")\r\n        .then(function (res) {\r\n          setProducts(res.data);\r\n          console.log(res.data);\r\n        })\r\n\r\n        .catch(function (error) {\r\n          console.log(error);\r\n        });\r\n      axios\r\n        .get(StrapiAdress + \"/units\")\r\n        .then(function (res) {\r\n          setUnits(res.data);\r\n          setUnitName(res.data[0].name);\r\n        })\r\n        .catch(function (error) {\r\n          console.log(error);\r\n        });\r\n      axios\r\n        .get(StrapiAdress + \"/categories\")\r\n        .then(function (res) {\r\n          setCategories(res.data);\r\n          setCategoryName(res.data[0].name);\r\n          setCategoryColor(res.data[0].color);\r\n        })\r\n        .catch(function (error) {\r\n          console.log(error);\r\n        });\r\n    }\r\n    fetchMyAPI();\r\n  }, []);\r\n\r\n  //\r\n  //    functions\r\n  //\r\n\r\n  const handleCategoryIdChange = (id, color) => {\r\n    setCategoryId(id);\r\n    setCategoryColor(color);\r\n  };\r\n  const handleUnitIdChange = (event) => {\r\n    setUnitId(event);\r\n  };\r\n  const handleUnitChange = (event) => {\r\n    setUnitName(event.target.value);\r\n  };\r\n  const handleProductChange = (event) => {\r\n    setProductName(event.target.value);\r\n  };\r\n  const handleCategoryChange = (event) => {\r\n    setCategoryName(event.target.value);\r\n  };\r\n\r\n  // updating product values after chip is clicked\r\n  const editProduct = (product, event) => {\r\n    setProductName(product.name);\r\n    setProductId(product.id);\r\n    setCategoryName(product.category.name);\r\n    setUnitName(product.unit.name);\r\n  };\r\n  //\r\n  // Post entry to database\r\n  //\r\n  const handleSubmit = () => {\r\n    const name = productName;\r\n    const unit = unitId;\r\n    const category = categoryId;\r\n    // check if name is already in database\r\n    // put to database if already exist\r\n    if (products.some((e) => e.name === name)) {\r\n      console.log(\"już mam takie coś\");\r\n      axios\r\n        .put(StrapiAdress + \"/products/\" + productId, { name, category, unit })\r\n        .then((res) => {\r\n          console.log(res);\r\n          console.log(res.data);\r\n        });\r\n    }\r\n    // post to database if this is new entry\r\n    else {\r\n      axios\r\n        .post(StrapiAdress + \"/products\", { name, category, unit })\r\n        .then((res) => {\r\n          console.log(res);\r\n          console.log(res.data);\r\n        });\r\n      // Update chips after SAVE is clicked\r\n      setProducts((prevState) => [\r\n        ...prevState,\r\n        { name, category: { color: categoryColor } },\r\n      ]);\r\n    }\r\n  };\r\n  return (\r\n    <Container>\r\n      <Grid container spacing={3} className={classes.divider}>\r\n        <Grid item xs={12} sm={4}>\r\n          <TextField\r\n            id=\"standard-basic\"\r\n            label=\"Wpisz nazwę produktu\"\r\n            fullWidth\r\n            value={productName}\r\n            onChange={handleProductChange}\r\n            required\r\n          />\r\n        </Grid>\r\n\r\n        <Grid item xs={12} sm={4}>\r\n          <TextField\r\n            id=\"unit\"\r\n            select\r\n            label=\"Wybierz jednostkę\"\r\n            value={unitName}\r\n            fullWidth\r\n            onChange={handleUnitChange}\r\n          >\r\n            {units.map((unit) => (\r\n              <MenuItem\r\n                key={unit.id}\r\n                value={unit.name}\r\n                onClick={() => handleUnitIdChange(unit.id)}\r\n              >\r\n                {unit.name}\r\n              </MenuItem>\r\n            ))}\r\n          </TextField>\r\n        </Grid>\r\n\r\n        <Grid item xs={12} sm={4}>\r\n          <TextField\r\n            id=\"category\"\r\n            select\r\n            label=\"Wybierz kategorię\"\r\n            value={categoryName}\r\n            fullWidth\r\n            onChange={handleCategoryChange}\r\n          >\r\n            {categories.map((category) => (\r\n              <MenuItem\r\n                key={category.id}\r\n                value={category.name}\r\n                onClick={() =>\r\n                  handleCategoryIdChange(category.id, category.color)\r\n                }\r\n              >\r\n                {category.name}\r\n              </MenuItem>\r\n            ))}\r\n          </TextField>\r\n        </Grid>\r\n        <Grid item xs={4} sm={4}>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.button}\r\n            endIcon={<SaveIcon />}\r\n            onClick={handleSubmit}\r\n          >\r\n            Zapisz\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n      {/* PRODUCTS CHIPS */}\r\n\r\n      {products.map((product) => (\r\n        <Chip\r\n          className={classes.chip}\r\n          color={\"primary\"}\r\n          key={product.id}\r\n          label={product.name}\r\n          onDelete={handleDelete}\r\n          deleteIcon={<EditIcon />}\r\n          onClick={(e) => editProduct(product, e)}\r\n        />\r\n      ))}\r\n      {/* PRODUCTS CHIPS */}\r\n    </Container>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nexport default function ProductDialog() {\r\n  //\r\n  // STATES\r\n  //\r\n  const [value, setValue] = React.useState(null);\r\n  const [open, toggleOpen] = React.useState(false);\r\n  const [dialogValue, setDialogValue] = React.useState({\r\n    title: \"\",\r\n    year: \"\",\r\n  });\r\n  //\r\n  // HANDLES\r\n  //\r\n  const handleClose = () => {\r\n    setDialogValue({\r\n      title: \"\",\r\n      year: \"\",\r\n    });\r\n\r\n    toggleOpen(false);\r\n  };\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    setValue({\r\n      title: dialogValue.title,\r\n      year: parseInt(dialogValue.year, 10),\r\n    });\r\n\r\n    handleClose();\r\n  };\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      onClose={handleClose}\r\n      aria-labelledby=\"form-dialog-title\"\r\n    >\r\n      <form onSubmit={handleSubmit}>\r\n        <DialogTitle id=\"form-dialog-title\">Dodaj nowy produkt</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            Zabrakło produktu na liście? Dodaj go!\r\n          </DialogContentText>\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"name\"\r\n            value={dialogValue.title}\r\n            onChange={(event) =>\r\n              setDialogValue({ ...dialogValue, title: event.target.value })\r\n            }\r\n            label=\"Nazwa\"\r\n            type=\"text\"\r\n          />\r\n          <TextField\r\n            margin=\"dense\"\r\n            id=\"name\"\r\n            value={dialogValue.year}\r\n            onChange={(event) =>\r\n              setDialogValue({ ...dialogValue, year: event.target.value })\r\n            }\r\n            label=\"Kategoria\"\r\n            type=\"text\"\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button type=\"submit\" color=\"primary\">\r\n            Add\r\n          </Button>\r\n        </DialogActions>\r\n      </form>\r\n    </Dialog>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  Button,\r\n  Chip,\r\n  Container,\r\n  Divider,\r\n  Grid,\r\n  TextField,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport ProductDialog from \"./ProductDialog\";\r\nimport StrapiAdress from \"./StrapiAdress\";\r\nexport default function Recipes() {\r\n  //\r\n  //    STYLES\r\n  //\r\n  const useStyles = makeStyles((theme) => ({\r\n    divider: {\r\n      marginTop: theme.spacing(3),\r\n      marginBottom: theme.spacing(3),\r\n    },\r\n    chip: {\r\n      marginRight: theme.spacing(1),\r\n      marginBottom: theme.spacing(1),\r\n    },\r\n  }));\r\n  const classes = useStyles();\r\n\r\n  //\r\n  // STATES\r\n  //\r\n  const [recipe, setRecipe] = useState({\r\n    recipeName: \"\",\r\n    recipeDescription: \"\",\r\n  });\r\n  const [recipes, setRecipes] = useState([]);\r\n  const [products, setProducts] = useState([]);\r\n  const [tempProducts, setTempProducts] = useState([]);\r\n  const handleDelete = () => {};\r\n\r\n  //\r\n  // HANDLERS\r\n  //\r\n  //\r\n  // Change recipe state based on name and description input\r\n  const handleRecipe = (event) => {\r\n    const value = event.target.value;\r\n    setRecipe({\r\n      ...recipe,\r\n      [event.target.id]: value,\r\n    });\r\n  };\r\n\r\n  //\r\n  //    FETCH from database\r\n  //\r\n  useEffect(() => {\r\n    async function fetchMyAPI() {\r\n      axios\r\n        .get(StrapiAdress + \"/recipes\")\r\n        .then(function (res) {\r\n          setRecipes(res.data);\r\n        })\r\n        .catch(function (error) {\r\n          console.log(error);\r\n        });\r\n      axios\r\n        .get(StrapiAdress + \"/products\")\r\n        .then(function (res) {\r\n          setProducts(res.data);\r\n        })\r\n        .catch(function (error) {\r\n          console.log(error);\r\n        });\r\n    }\r\n    fetchMyAPI();\r\n  }, []);\r\n\r\n  //\r\n  // Change values for  temp products\r\n  //\r\n  const handleProductValue = (product, e) => {\r\n    console.log(e.target.value, product);\r\n\r\n    // 1. Make a shallow copy of the tempProducts\r\n    let tempProductsCopy = [...tempProducts];\r\n    // 2. Make a shallow copy of the item you want to mutate\r\n    let tempProductCopy = {\r\n      ...tempProductsCopy[tempProducts.indexOf(product)],\r\n    };\r\n    // 3. Replace the property you're intested in\r\n    tempProductCopy.value = e.target.value;\r\n\r\n    // 4. Put it back into our array. N.B. we *are* mutating the array here, but that's why we made a copy first\r\n    tempProductsCopy[tempProducts.indexOf(product)] = tempProductCopy;\r\n    // 5. Set the state to our new copy\r\n\r\n    setTempProducts(tempProductsCopy);\r\n  };\r\n\r\n  //\r\n  // Display recipe when chip is clicked\r\n  //\r\n  const handleDisplayRecipe = (recipe) => {\r\n    setRecipe({\r\n      ...recipe,\r\n      recipeName: recipe.name,\r\n      recipeDescription: recipe.Recipe,\r\n    });\r\n    // array of  products ID's from recipe\r\n    const idArray = recipe.productsQuantity.map((quantity) => {\r\n      return quantity.product.id;\r\n    });\r\n\r\n    // filter products based on recipe products ID's\r\n    const filteredProducts = products.filter((product) =>\r\n      idArray.includes(product.id)\r\n    );\r\n\r\n    setTempProducts(filteredProducts);\r\n    console.log(recipe);\r\n  };\r\n  //\r\n  // Post entry to database\r\n  //\r\n  const handleSubmit = () => {\r\n    //\r\n    // Temp products reformatting for DB purpose\r\n    //\r\n    const productsIdArray = tempProducts.map((item) => {\r\n      const productsQuantity = {};\r\n      productsQuantity.product = item.id;\r\n      productsQuantity.value = item.value;\r\n      return productsQuantity;\r\n    });\r\n\r\n    const name = recipe.recipeName;\r\n    const Recipe = recipe.recipeDescription;\r\n    const productsQuantity = productsIdArray;\r\n\r\n    axios\r\n      .post(StrapiAdress + \"/recipes\", {\r\n        name,\r\n        Recipe,\r\n        productsQuantity,\r\n      })\r\n      .then((res) => {\r\n        console.log(res);\r\n        console.log(res.data);\r\n      });\r\n  };\r\n\r\n  console.log(tempProducts);\r\n  return (\r\n    <Container>\r\n      <ProductDialog />\r\n      <Grid container className={classes.divider} spacing={3}>\r\n        <Grid item sm={6} xs={12}>\r\n          <Grid item xs={12}>\r\n            <TextField\r\n              id=\"recipeName\"\r\n              label=\"Nazwa przepisu\"\r\n              value={recipe.recipeName}\r\n              onChange={handleRecipe}\r\n              fullWidth\r\n              required\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} className={classes.divider}>\r\n            <TextField\r\n              id=\"recipeDescription\"\r\n              label=\"Przepis\"\r\n              multiline\r\n              rowsMax={14}\r\n              value={recipe.recipeDescription}\r\n              onChange={handleRecipe}\r\n              fullWidth\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} className={classes.divider}>\r\n            <Autocomplete\r\n              disablePortal={true}\r\n              fullWidth\r\n              multiple\r\n              size=\"small\"\r\n              id=\"combo-box-demo\"\r\n              options={products}\r\n              value={tempProducts}\r\n              onChange={(event, value) => setTempProducts(value)}\r\n              getOptionLabel={(option) => option.name}\r\n              renderInput={(params) => (\r\n                <TextField {...params} variant=\"standard\" label=\"Produkty\" />\r\n              )}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={4} sm={4}>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.button}\r\n              endIcon={<SaveIcon />}\r\n              onClick={handleSubmit}\r\n            >\r\n              Zapisz\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item sm={6} xs={12}>\r\n          {tempProducts.length > 0 && (\r\n            <Typography variant=\"caption\" gutterBottom>\r\n              Wpisz ilość produktów\r\n            </Typography>\r\n          )}\r\n          <Grid container>\r\n            {tempProducts.map((product) => (\r\n              <Grid item xs={6}>\r\n                <TextField\r\n                  key={product.id}\r\n                  label={product.name}\r\n                  id=\"standard-size-small\"\r\n                  size=\"small\"\r\n                  helperText={product.unit.name}\r\n                  value={product.value}\r\n                  onChange={(e) => handleProductValue(product, e)}\r\n                />\r\n              </Grid>\r\n            ))}\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n      <Divider />\r\n      <Grid container className={classes.divider} spacing={3}>\r\n        <Grid item xs={12} sm={12}>\r\n          {recipes.map((recipe) => (\r\n            <Chip\r\n              className={classes.chip}\r\n              key={recipe.id}\r\n              label={recipe.name}\r\n              color=\"primary\"\r\n              onDelete={handleDelete}\r\n              onClick={() => handleDisplayRecipe(recipe)}\r\n            />\r\n          ))}\r\n        </Grid>\r\n      </Grid>\r\n    </Container>\r\n  );\r\n}\r\n","import { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\";\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    background: {\r\n      default: \"#F7F5F3\",\r\n    },\r\n    primary: {\r\n      main: \"#604D53\",\r\n    },\r\n  },\r\n});\r\n\r\nexport default theme;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Chip, Container, Grid, Typography } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport axios from \"axios\";\r\nimport StrapiAdress from \"./StrapiAdress\";\r\n\r\nexport default function Calendar() {\r\n  //\r\n  // Styles overrides\r\n  //\r\n  const useStyles = makeStyles((theme) => ({\r\n    divider: {\r\n      marginTop: theme.spacing(3),\r\n      marginBottom: theme.spacing(3),\r\n    },\r\n    chip: {\r\n      marginRight: theme.spacing(1),\r\n      marginBottom: theme.spacing(1),\r\n    },\r\n    section: {\r\n      margin: theme.spacing(3, 1, 1),\r\n    },\r\n  }));\r\n  const classes = useStyles();\r\n\r\n  //\r\n  // States\r\n  //\r\n  const [recipes, setRecipes] = useState([]);\r\n\r\n  //\r\n  // fetch\r\n  //\r\n  useEffect(() => {\r\n    async function fetchMyAPI() {\r\n      axios\r\n        .get(StrapiAdress + \"/recipes\")\r\n        .then(function (res) {\r\n          setRecipes(res.data);\r\n          console.log(res.data);\r\n        })\r\n\r\n        .catch(function (error) {\r\n          console.log(error);\r\n        });\r\n    }\r\n    fetchMyAPI();\r\n  }, []);\r\n\r\n  //\r\n  // Handlers\r\n  //\r\n  const handleRecipeChip = (recipe) => {\r\n    const index = recipes.indexOf(recipe);\r\n    console.log(index);\r\n    // 1. Make a shallow copy of the items\r\n    let tempRecipes = [...recipes];\r\n    // 2. Make a shallow copy of the item you want to mutate\r\n    let tempRecipe = { ...tempRecipes[index] };\r\n    // 3. Replace the property you're intested in\r\n\r\n    if (tempRecipe.isSelected === true) {\r\n      tempRecipe.productsQuantity.map((product) => (product.isTaken = false));\r\n    }\r\n\r\n    tempRecipe.isSelected = !tempRecipe.isSelected;\r\n    // 4. Put it back into our array. N.B. we *are* mutating the array here, but that's why we made a copy first\r\n    tempRecipes[index] = tempRecipe;\r\n\r\n    // 5. Set the state to our new copy\r\n    setRecipes(tempRecipes);\r\n    console.log(recipes);\r\n\r\n    // axios send to database\r\n\r\n    axios\r\n      .put(StrapiAdress + \"/recipes/\" + recipe.id, tempRecipe)\r\n      .then((response) => {\r\n        console.log(response);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Typography variant=\"h5\" gutterBottom className={classes.section}>\r\n        Zaznacz przepisy do kupienia\r\n      </Typography>\r\n\r\n      <Grid container spacing={3} className={classes.divider}>\r\n        <Grid item xs={12} sm={12}>\r\n          {/* Recipes CHIPS */}\r\n          {recipes.map((recipe) => (\r\n            <Chip\r\n              className={classes.chip}\r\n              key={recipe.id}\r\n              label={recipe.name}\r\n              color={recipe.isSelected ? \"primary\" : \"\"}\r\n              onClick={() => handleRecipeChip(recipe)}\r\n            />\r\n          ))}\r\n          {/* Recipes CHIPS */}\r\n        </Grid>\r\n      </Grid>\r\n    </Container>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport {\r\n  Checkbox,\r\n  Grid,\r\n  List,\r\n  ListItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  ListSubheader,\r\n} from \"@material-ui/core\";\r\nimport StrapiAdress from \"./StrapiAdress\";\r\n\r\nimport axios from \"axios\";\r\n\r\nexport default function BasketRecipes(props) {\r\n  const handleCheckbox = (index, id, recipe) => {\r\n    // 1. Make a shallow copy of the items\r\n    let tempRecipes = [...props.recipes];\r\n    // // 2. Make a shallow copy of the item you want to mutate\r\n    let tempRecipe = { ...tempRecipes[index] };\r\n    // // 3. Replace the property you're intested in\r\n    tempRecipe.productsQuantity[id].isTaken = !tempRecipe.productsQuantity[id]\r\n      .isTaken;\r\n    // // 4. Put it back into our array. N.B. we *are* mutating the array here, but that's why we made a copy first\r\n    tempRecipes[index] = tempRecipe;\r\n    // 5. Set the state to our new copy\r\n\r\n    props.onChange(tempRecipes);\r\n\r\n    axios.put(StrapiAdress + \"/recipes/\" + recipe.id, recipe).then((res) => {\r\n      console.log(res);\r\n      console.log(res.data);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Grid item xs={12} sm={12}>\r\n      {props.recipes.map((recipe) => (\r\n        <>\r\n          <List\r\n            dense\r\n            disablePadding={true}\r\n            subheader={<ListSubheader>{recipe.name}</ListSubheader>}\r\n          ></List>\r\n\r\n          {recipe.productsQuantity.map((item) => (\r\n            <ListItem key={item.id} role={undefined} button>\r\n              <ListItemIcon>\r\n                <Checkbox\r\n                  edge=\"start\"\r\n                  tabIndex={-1}\r\n                  disableRipple\r\n                  checked={item.isTaken}\r\n                  onClick={() =>\r\n                    handleCheckbox(\r\n                      props.recipes.indexOf(recipe),\r\n                      recipe.productsQuantity.indexOf(item),\r\n                      recipe\r\n                    )\r\n                  }\r\n                />\r\n              </ListItemIcon>\r\n              <ListItemText\r\n                id={item.id}\r\n                primary={item.product.name}\r\n                secondary={item.value + \" \" + props.itemUnit(item.product.unit)}\r\n              />\r\n            </ListItem>\r\n          ))}\r\n        </>\r\n      ))}\r\n    </Grid>\r\n  );\r\n}\r\n","export const GRAPHQL_API = \"http://localhost:1337/graphql\";\r\nexport const productsQuery = `query {\r\n  recipes(where: { isSelected: true }){\r\n    name\r\n    productsQuantity {\r\n      isTaken \r\n      value\r\n      product {\r\n        name\r\n        unit{name}\r\n        category {\r\n          name\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n`;\r\n","import {\r\n  Checkbox,\r\n  Grid,\r\n  List,\r\n  ListItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  ListSubheader,\r\n} from \"@material-ui/core\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport StrapiAdress from \"./StrapiAdress\";\r\nimport * as Constants from \"./constants\";\r\n\r\nimport { groupBy } from \"lodash\";\r\n\r\nexport default function BasketCategories(props) {\r\n  //\r\n  // States\r\n  //\r\n  const [products, setProducts] = useState([]);\r\n\r\n  //\r\n  // Fetch db\r\n  //\r\n  useEffect(() => {\r\n    async function fetchMyAPI() {\r\n      axios({\r\n        url: StrapiAdress + \"/graphql\",\r\n        method: \"post\",\r\n        data: {\r\n          query: Constants.productsQuery,\r\n        },\r\n      })\r\n        .then((res) => {\r\n          console.log(res.data.data);\r\n          setProducts(res.data.data.recipes);\r\n        })\r\n        .catch((err) => {\r\n          console.log(err.message);\r\n        });\r\n    }\r\n    fetchMyAPI();\r\n  }, []);\r\n  //\r\n  // Take only products from recipes\r\n  //\r\n  const productsArray = products.flatMap((recipe) =>\r\n    recipe.productsQuantity.map((item) => item)\r\n  );\r\n  //\r\n  // group products by category name\r\n  //\r\n  const grouped = groupBy(\r\n    productsArray,\r\n    (product) => product.product.category.name\r\n  );\r\n\r\n  //\r\n  // Prepare array of HTML to display with dynamic category name and products\r\n  //\r\n  const items = [];\r\n  for (const [key, value] of Object.entries(grouped)) {\r\n    items.push(\r\n      <>\r\n        <List\r\n          dense\r\n          disablePadding={true}\r\n          subheader={<ListSubheader>{key}</ListSubheader>}\r\n        ></List>\r\n        {value.map((product) => (\r\n          <ListItem key={product.id} role={undefined} button>\r\n            <ListItemIcon>\r\n              <Checkbox\r\n                edge=\"start\"\r\n                tabIndex={-1}\r\n                disableRipple\r\n                checked={product.isTaken}\r\n                // onClick={() =>\r\n                //   handleCheckbox(\r\n                //     props.recipes.indexOf(recipe),\r\n                //     recipe.productsQuantity.indexOf(item),\r\n                //     recipe\r\n                //   )\r\n                // }\r\n              />\r\n            </ListItemIcon>\r\n            <ListItemText\r\n              id={product.id}\r\n              primary={product.product.name}\r\n              secondary={product.value + \" \" + product.product.unit.name}\r\n            />\r\n          </ListItem>\r\n        ))}\r\n      </>\r\n    );\r\n  }\r\n  console.log(Object.entries(grouped));\r\n  return (\r\n    <Grid item xs={12} sm={12}>\r\n      {items}\r\n      {/* {grouped.map((recipe) => (\r\n        <>\r\n          <List\r\n            dense\r\n            disablePadding={true}\r\n            subheader={<ListSubheader>{recipe.name}</ListSubheader>}\r\n          ></List>\r\n\r\n          {recipe.productsQuantity.map((item) => (\r\n            <ListItem key={item.id} role={undefined} button>\r\n              <ListItemIcon>\r\n                <Checkbox\r\n                  edge=\"start\"\r\n                  tabIndex={-1}\r\n                  disableRipple\r\n                  checked={item.isTaken}\r\n                  onClick={() =>\r\n                    handleCheckbox(\r\n                      props.recipes.indexOf(recipe),\r\n                      recipe.productsQuantity.indexOf(item),\r\n                      recipe\r\n                    )\r\n                  }\r\n                />\r\n              </ListItemIcon>\r\n              <ListItemText\r\n                id={item.id}\r\n                primary={item.product.name}\r\n                secondary={item.value + \" \" + props.itemUnit(item.product.unit)}\r\n              />\r\n            </ListItem>\r\n          ))}\r\n        </>\r\n      ))} */}\r\n    </Grid>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Button,\r\n  Container,\r\n  Grid,\r\n  ListItemIcon,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport axios from \"axios\";\r\nimport StrapiAdress from \"./StrapiAdress\";\r\nimport BasketRecipes from \"./BasketRecipes\";\r\nimport BasketCategories from \"./BasketCategories\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  section: {\r\n    margin: theme.spacing(3, 1, 1),\r\n  },\r\n}));\r\n\r\nexport default function Basket() {\r\n  const classes = useStyles();\r\n  //\r\n  // States\r\n  //\r\n  const [recipes, setRecipes] = useState([]);\r\n  const [units, setUnits] = useState([]);\r\n  const [isCategoryView, setIscategoryView] = useState(true);\r\n  const [isFetched, setIsFetched] = useState(false);\r\n  //\r\n  // Pass units to child component to display unit and value\r\n  //\r\n  const itemUnit = (itemUnit) => {\r\n    return units\r\n      .filter((units) => units.id === itemUnit)\r\n      .map((unit) => unit.name);\r\n  };\r\n\r\n  //\r\n  // Pass sate changing function to child props\r\n  //\r\n  function handleRecipeChange(newValue) {\r\n    setRecipes(newValue);\r\n  }\r\n\r\n  //\r\n  // fetch\r\n  //\r\n  useEffect(() => {\r\n    async function fetchMyAPI() {\r\n      axios\r\n        .get(StrapiAdress + \"/recipes?isSelected=true\")\r\n        .then(function (res) {\r\n          setRecipes(res.data);\r\n          setIsFetched(true);\r\n        })\r\n        .catch(function (error) {\r\n          console.log(error);\r\n        });\r\n      axios\r\n        .get(StrapiAdress + \"/units\")\r\n        .then(function (res) {\r\n          setUnits(res.data);\r\n        })\r\n        .catch(function (error) {\r\n          console.log(error);\r\n        });\r\n    }\r\n    fetchMyAPI();\r\n  }, []);\r\n\r\n  return (\r\n    <Container>\r\n      {/* Check if recipes is empty - print string */}\r\n      <Typography variant=\"h5\" gutterBottom className={classes.section}>\r\n        {isFetched\r\n          ? !recipes.length\r\n            ? \"Nie ma żadnych produktów - znaznacz przepisy w kalendarzu\"\r\n            : \"Produkty do kupienia\"\r\n          : \"Poczekaj chwilkę...\"}\r\n      </Typography>\r\n      <Button\r\n        color=\"secondary\"\r\n        variant=\"contained\"\r\n        onClick={() => setIscategoryView(!isCategoryView)}\r\n      >\r\n        {isCategoryView ? \"Włącz widok kategorii\" : \"Włącz widok przepisów\"}\r\n      </Button>\r\n      <Grid container spacing={3}>\r\n        {isCategoryView ? (\r\n          <BasketRecipes\r\n            recipes={recipes}\r\n            itemUnit={itemUnit}\r\n            onChange={handleRecipeChange}\r\n          />\r\n        ) : (\r\n          <BasketCategories recipes={recipes} />\r\n        )}\r\n      </Grid>\r\n    </Container>\r\n  );\r\n}\r\n","import \"./App.css\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Appbar from \"./Appbar\";\r\nimport Products from \"./Products\";\r\nimport React from \"react\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\n\r\nimport Recipes from \"./Recipes\";\r\nimport { ThemeProvider } from \"@material-ui/core/styles\";\r\nimport { CssBaseline, Paper } from \"@material-ui/core\";\r\nimport theme from \"./Theme\";\r\nimport Calendar from \"./Calendar\";\r\nimport Basket from \"./Basket\";\r\n\r\nexport default function App() {\r\n  return (\r\n    <>\r\n      <ThemeProvider theme={theme}>\r\n        <CssBaseline />\r\n        <Router basename={process.env.PUBLIC_URL}>\r\n          <Container maxWidth=\"md\" disableGutters=\"true\">\r\n            <Paper elevation={3}>\r\n              <Appbar />\r\n              <Switch>\r\n                <Route exact path={[\"/products\", \"/\"]}>\r\n                  <Products />\r\n                </Route>\r\n\r\n                <Route path=\"/recipes\">\r\n                  <Recipes />\r\n                </Route>\r\n                <Route path=\"/calendar\">\r\n                  <Calendar />\r\n                </Route>\r\n                <Route path=\"/basket\">\r\n                  <Basket />\r\n                </Route>\r\n              </Switch>\r\n            </Paper>\r\n          </Container>\r\n        </Router>\r\n      </ThemeProvider>\r\n    </>\r\n  );\r\n}\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}